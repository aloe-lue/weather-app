{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/global","webpack://weather-app/webpack/runtime/publicPath","webpack://weather-app/./src/js/searchIcon.js","webpack://weather-app/./src/js/weatherInfo.js","webpack://weather-app/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import MagnifyingGlassLeft from '../img/magnifying-glass-left.svg';\n\nconst searchIcon = (parent) => {\n  const icon = new Image();\n  icon.src = MagnifyingGlassLeft;\n\n  parent.appendChild(icon);\n\n  return parent;\n};\n\nexport default searchIcon;\n","const weatherAPI = ({ location  }) => {\n  const url = `https://api.weatherapi.com/v1/current.json?key=53a730f3a4b74aefa2144040241703&q=${location}`;\n  \n  const getWeather = async () => {\n    const resources = await fetch(url, { mode: 'cors' });\n    const resolve = await resources.json();\n\n    return resolve;\n  }\n  \n  return { getWeather };\n};\n\nconst weatherInfo = ({\n    location, \n    weatherApi, \n  }, {\n    locationNameStr,\n    locationDateStr,\n    tempCStr,\n    conditionStr, \n    conditionImg,\n    uvStr, \n    feelsLikeStr, \n    humidityStr, \n    windDirStr, \n    windKphStr, \n    pressureMbStr, \n    visKmStr\n  }) => {\n  const locationName = document.querySelector(locationNameStr);\n  const locationDate = document.querySelector(locationDateStr);\n  const tempC = document.querySelector(tempCStr);\n  const conditionText = document.querySelector(conditionStr);\n  const conditionImage = document.querySelector(conditionImg);\n\n  const uvText = document.querySelector(uvStr);\n  const feelsLikeText = document.querySelector(feelsLikeStr);\n  const humidityText = document.querySelector(humidityStr);\n  const windDirText = document.querySelector(windDirStr);\n  const windKphText = document.querySelector(windKphStr);\n  const pressureMbText = document.querySelector(pressureMbStr);\n  const visKmText = document.querySelector(visKmStr);\n \n  const getInfo = () => {\n    const weatherInfoGetter = weatherApi({ location }).getWeather()\n      .then((resolve) => {\n        if (!resolve.ok) {\n          alert(resolve['error'].message);\n        }\n\n        const current = resolve['current'];\n        const locationInfo = resolve['location'];\n\n        locationName.innerText = `${locationInfo.name}, ${locationInfo.country}`;\n        tempC.innerText = `${current.temp_c} °C`;\n        conditionText.innerText = `${current.condition.text}`; \n        conditionImage.setAttribute('src', `https:${current.condition.icon}`);\n        locationDate.innerText = `Last Updated: ${current.last_updated}`;\n\n        uvText.innerText = `${current.uv}`; \n        feelsLikeText.innerText = `${current.feelslike_c} °C`;\n        humidityText.innerText = `${current.humidity}%`;\n        windDirText.innerText = `${current.wind_dir}`;\n        windKphText.innerText = `${current.wind_kph}`;\n        pressureMbText.innerText = `${current.pressure_mb}`;\n        visKmText.innerText = `${current.vis_km}`;\n\n        \n      })\n      .catch((err) => err); \n\n    return weatherInfoGetter;\n  };\n\n  return { getInfo };\n};\n\n export { weatherAPI, weatherInfo };\n   \n","import './css/style.css';\nimport searchIcon from './js/searchIcon';\nimport { weatherInfo, weatherAPI, } from './js/weatherInfo';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const searchInput = document.querySelector(\n    'input[id=\"search-weather-location\"]',\n  );\n\n  const searchLocationInput = document.querySelector('input[id=\"search-weather-location\"]');\n  const searchBtn = document.querySelector('button[id=\"search-location\"]');\n  searchIcon(searchBtn);\n\n  weatherInfo({ location: 'london', weatherApi: weatherAPI }, {\n    locationNameStr: \"div[class='location-name-and-country']\",\n    locationDateStr: \"div[class='location-date']\",\n    tempCStr: \"div[class='temp-c']\",\n    conditionStr: \"div[class='condition-text']\",\n    conditionImg: \"img[class='condition-img']\",\n    uvStr: \"div[class='uv']\",\n    feelsLikeStr: \"div[class='feelslike-c']\",\n    humidityStr: \"div[class='humidity']\",\n    windDirStr: \"div[class='wind-dir']\",\n    windKphStr: \"div[class='wind-kph']\",\n    pressureMbStr: \"div[class='pressure-mb']\",\n    visKmStr: \"div[class='vis-km']\"\n }).getInfo();\n\n  searchBtn.addEventListener('click', (e) => {\n    if (searchLocationInput.value.length === 0) {\n      searchLocationInput.reportValidity();\n    } else {\n      e.preventDefault();\n      weatherInfo({ location: searchLocationInput.value , weatherApi: weatherAPI }, {\n        locationNameStr: \"div[class='location-name-and-country']\",\n        locationDateStr: \"div[class='location-date']\",\n        tempCStr: \"div[class='temp-c']\",\n        conditionStr: \"div[class='condition-text']\",\n        conditionImg: \"img[class='condition-img']\",\n        uvStr: \"div[class='uv']\",\n        feelsLikeStr: \"div[class='feelslike-c']\",\n        humidityStr: \"div[class='humidity']\",\n        windDirStr: \"div[class='wind-dir']\",                                        \n        windKphStr: \"div[class='wind-kph']\",\n        pressureMbStr: \"div[class='pressure-mb']\",\n        visKmStr: \"div[class='vis-km']\"\n     }).getInfo();\n\n    }\n  });\n \n});\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","parent","icon","Image","appendChild","weatherAPI","url","getWeather","async","resources","fetch","mode","json","weatherInfo","weatherApi","locationNameStr","locationDateStr","tempCStr","conditionStr","conditionImg","uvStr","feelsLikeStr","humidityStr","windDirStr","windKphStr","pressureMbStr","visKmStr","locationName","querySelector","locationDate","tempC","conditionText","conditionImage","uvText","feelsLikeText","humidityText","windDirText","windKphText","pressureMbText","visKmText","getInfo","then","resolve","ok","alert","message","current","locationInfo","innerText","name","country","temp_c","condition","text","setAttribute","last_updated","uv","feelslike_c","humidity","wind_dir","wind_kph","pressure_mb","vis_km","catch","err","addEventListener","searchLocationInput","searchBtn","value","reportValidity","preventDefault"],"sourceRoot":""}